# multiplot 
set multiplot { layout <rows>,<cols>
                     {rowsfirst|columnsfirst} {downwards|upwards}
                     {title <page title>}
                     {scale <xscale>{,<yscale>}} {offset <xoff>{,<yoff>}}
                   }
     unset multiplot
http://gnuplot.sourceforge.net/docs_4.2/node203.html

# basic gnuplot script

set xlabel "Canal"
set ylabel "Energie (KeV)"
#set logscale x
#Cuadrícula
#set grid   
#Posición de la leyenda           
set key lmargin
set xrange [530:560]
set term postscript eps enhanced color 18
set output "name.eps"
#fit f(x) "datos.dat" u 1:2 via a,b 
plot "calibrado_energia_Am241.dat" with points pointtype 7 title "Am241"
#pause -1

#Change font size

set ylabel "x2" font "Helvetica,20"
set key font "Helvetica,20"
set tics font "Helvetica,20"


# Use vectors
plot "campo_vector.dat" u 1:2:3:4 with vectors

with
--------------------------
campo_vector.dat
#x1	y1	x2	y2
---------------------------

arrow goes from (x1,y1) to (x1+x2,y1+y2) 
----------------------------------------------------------------------------------

#Include single point on graph
-->plot f(x), 'puntos.dat' w p pt 7 ps 5 notitle
--------------------------
puntos.dat
x	y #dibuja punto en (x,y)
---------------------------

#include text in graph
-->set label 3 "texto" at 1,2      #coloca etiqueta 3 que pone "texto" en el punto (1,2)

#pause program
-->pause -1  "Hit return to continue"

#save variables on file (ej: parametros de un fit)
-->set print "fliename"  # guarda todo lo que escribas con print en fichero <filename> sobrescribiendo
-->set print "filename" append # idem sin sobreescribir
-->print something  # guarda <something> en <filename> (si no usamos set print, muestra <something> por pantalla>

#save fit error on variable:
If activated by using "set fit errorvariables", the error for each fitted parameter will be stored in a variable named like the parameter, but with "_err" appended.

#Greek letter
{/Symbol r} #writes rho

#degree symbol
º={/Symbol \260}

#define function 1-1/x between x1=1 y x2=x
f(x) = (x > 1 && x < 2) ? 1-1/x : 1/0

# Format of label
set format y "%.1e" # one decimal + exponential notation  

# dibujar linea Plot line// plot arrow
set arrow from 0.5,-0.5 to 0.5,0.9 nohead lc rgb 'red'  

# Add tic in axis
set xtics add ("name" 2.28)--> añade "name" sin comillas en posicion x=2.28 y=0  

# Modify xtics
set xtics ("name" xposition,"name2" xpos2,...)--> it is different from xtics add, since there only will appear   
the points that we add by hand (instead of adding)  

# do loop 
-->DATA NAME HAS TO BE PROPERLY FORMATTED  
set term png size 1600,1200 #don't know if works with a different terminal  
do for [t=1:30]{ #it'll create 30 figures  
set output "image.00".t.".png" #name of the 30 .png figures  
plot "picture.".t.".dat" u 1:2:3:4 w vectors head filled lt 2 notitle,"picture.".t.".dat" u 1:2 w points pt 7 notitle  
}

# Nested loops/ plot for
x=3 #realizations of loop over a (first loop)
do for [a=1:x]{
set output "zimage.".a.".png"
plot for [j=1:a] "zzpos_".j.".dat" with points pt 7 lt rgb "grey" ps 3 notitle,\
"zzpos_".a.".dat" with points pt 7 lt rgb "red" ps 3 notitle
}

# operation over column
plot "something.dat" u 1:($2/10.0) -->divide all elements of column 2 by 10.0

# 3D  plot
set view  53,217,1,1 #set angle, scale: Rot_x,Rot_z,x_scale,z_scale
set hidden3d #opaque surfaces

# Heat map
set view map
splot 'coarse.dat' u 1:2:3 with image notitle

# increase number of samples, used to plot sqrt(x) properly (for example)
set samples 501 

# dashed lines (genuplot version > 5.0)
plot "something" w lines dashtype 2 notitle

# Set key...
set key spacing 2 # vertical space between items of legend
http://gnuplot.sourceforge.net/docs_4.2/node192.html
